<?php
/* Module for interacting with the UNiDAYS service.

The MIT License (MIT)

Copyright (c) 2017 MyUNiDAYS Ltd.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/

/**
* UNiDAYS SDK Tracking Helper Class for generating tracking URLs.
*
* @category   SDK
* @package    UNiDAYS
* @subpackage None
* @copyright  Copyright (c) 2017 MyUNiDAYS Ltd. (see above)
* @license    The MIT License (MIT) (see above)
* @version    Release: 1.1
* @link       http://www.myunidays.com
*/

class Tracking {
	var $customer_ID;
	var $key;
    var $tracking_url;


	function __construct($CustomerID, $SigningKey){
		$this->customer_ID=$CustomerID;
		$this->key=base64_decode($SigningKey);

        $this->tracking_url='https://tracking.myunidays.com/perks/redemption/v1.1'; // live url
        //$this->tracking_url='https://tracking.myunidays.com/perks/redemption/v1.1-test'; // test url
	}

    public function CreateUrl($TransactionID, $MemberID, $currency, $order_total, $items_unidays_discount, $code, $items_tax, $shipping_gross, $shipping_discount, $items_gross, $items_other_discount, $unidays_discount_percentage, $new_customer, $url_type='server'){
	/* Creates a tracking URL for the given parameters. See README*/

		if($url_type=='server'){
			$extension='';
		}else{
			$extension='.gif';
		}
		$querystring = '?CustomerId=' . $this->encode_urlvariables($this->customer_ID)
			. '&TransactionId=' . $this->encode_urlvariables($TransactionID)
			. '&MemberId=' . $this->encode_urlvariables($MemberID)
			. '&Currency=' . rawurlencode($currency)
			. '&OrderTotal=' . rawurlencode(number_format($order_total, 2, '.',''))
			. '&ItemsUNiDAYSDiscount=' . $this->url_encode_number($items_unidays_discount)
			. '&Code=' . rawurlencode($code)
			. '&ItemsTax=' . $this->url_encode_number($items_tax)
			. '&ShippingGross=' . $this->url_encode_number($shipping_gross)
			. '&ShippingDiscount=' . $this->url_encode_number($shipping_discount)
			. '&ItemsGross=' . $this->url_encode_number($items_gross)
			. '&ItemsOtherDiscount=' . $this->url_encode_number($items_other_discount)
			. '&UNiDAYSDiscountPercentage=' . $this->url_encode_number($unidays_discount_percentage)
			. '&NewCustomer=' . rawurlencode($new_customer);

		$signature=$this->encode_signature(hash_hmac("sha512", $querystring, $this->key, true));

		$url=$this->tracking_url.$extension.$querystring.'&Signature='.$signature;
		return $url;
	}

	private function url_encode_number($number) {
		return $number != '' ? rawurlencode(number_format($number, 2, '.', '')) : '';
	}

	private function encode_urlvariables($urlvariable){
	//Enforces lowercase url encoding for the base64 encoded variable passed into the url (i.e. CustomerID, TransactionId etc.)
		$first_encode= rawurlencode($urlvariable);
		$encoded_variable= preg_replace_callback('/%(\d[A-F]|[A-F]\d)/', function(array $matches){return strtolower($matches[0]);}, $first_encode);//If your server is not running PHP 5.3 or later, this line may generate an error due to the use of an anonymous function.
		return $encoded_variable;
	}

	public function encode_signature($hash){
		/* URL encoding characters are uppercase in PHP, and since we are looking to match the hash algorithms provided exactly, we have to take the additional precaution of forcing any url encoding characters in the hash to be displayed in lower case
		This function takes the signature generated by hash_hmac, applies both base64 encoding and then url encoding. It then replaces any upper case letters that are part of a url encoded character with the lower case version.
		*/
		$first_encode=rawurlencode(base64_encode($hash));
		$encoded_signature = preg_replace_callback('/%(\d[A-F]|[A-F]\d)/',function(array $matches){return strtolower($matches[0]);},$first_encode);//If your server is not running PHP 5.3 or later, this line may generate an error due to the use of an anonymous function.
		return $encoded_signature;
	}

}

?>